@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix guidance: <./guidance#> .
@prefix secrets: <./secrets_management#> .
@prefix meta: <./meta#> .
@prefix metameta: <./metameta#> .
@prefix problem: <./problem#> .
@prefix solution: <./solution#> .
@prefix conversation: <./conversation#> .
@prefix test: <./test#> .
@prefix impl: <./implementation#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

secrets:SecretsManagementOntology rdf:type owl:Ontology ;
    rdfs:label "Secrets Management Ontology" ;
    rdfs:comment "Ontology for managing secrets using 1Password and environment variables" ;
    owl:versionInfo "1.3.0" ;
    owl:imports <./guidance> .

# Core Classes
secrets:SecretsManagementPattern rdf:type owl:Class ;
    rdfs:label "Secrets Management Pattern" ;
    rdfs:subClassOf guidance:BestPractice ;
    rdfs:comment "Pattern for managing secrets across the system" .

secrets:SecretStore rdf:type owl:Class ;
    rdfs:label "Secret Store" ;
    rdfs:comment "A system for storing secrets" .

secrets:SecretReference rdf:type owl:Class ;
    rdfs:label "Secret Reference" ;
    rdfs:comment "A reference to a secret in code or configuration" .

secrets:KeyRotationProcess rdf:type owl:Class ;
    rdfs:label "Key Rotation Process" ;
    rdfs:comment "Base class for key rotation processes" .

secrets:TestCoverage rdf:type owl:Class ;
    rdfs:label "Test Coverage" ;
    rdfs:comment "Test coverage for secret management functionality" .

secrets:TestCase rdf:type owl:Class ;
    rdfs:label "Test Case" ;
    rdfs:comment "Individual test case for functionality" .

secrets:Implementation rdf:type owl:Class ;
    rdfs:label "Implementation" ;
    rdfs:comment "Implementation details of functionality" .

secrets:ErrorHandling rdf:type owl:Class ;
    rdfs:label "Error Handling" ;
    rdfs:comment "Error handling strategies" .

secrets:ErrorCategory rdf:type owl:Class ;
    rdfs:label "Error Category" ;
    rdfs:comment "Categories of errors" .

secrets:MonitoringRequirement rdf:type owl:Class ;
    rdfs:label "Monitoring Requirement" ;
    rdfs:comment "Monitoring requirements and metrics" .

# Properties
secrets:hasSecretStore rdf:type owl:ObjectProperty ;
    rdfs:label "has secret store" ;
    rdfs:domain secrets:SecretsManagementPattern ;
    rdfs:range secrets:SecretStore .

secrets:usesReferenceFormat rdf:type owl:DatatypeProperty ;
    rdfs:label "uses reference format" ;
    rdfs:domain secrets:SecretReference ;
    rdfs:range xsd:string .

secrets:requiresRole rdf:type owl:DatatypeProperty ;
    rdfs:label "requires role" ;
    rdfs:domain secrets:KeyRotationProcess ;
    rdfs:range xsd:string .

secrets:hasTestCoverage rdf:type owl:ObjectProperty ;
    rdfs:label "has test coverage" ;
    rdfs:domain secrets:KeyRotationProcess ;
    rdfs:range secrets:TestCoverage .

secrets:hasTestCase rdf:type owl:ObjectProperty ;
    rdfs:label "has test case" ;
    rdfs:domain secrets:TestCoverage ;
    rdfs:range secrets:TestCase .

secrets:hasImplementation rdf:type owl:ObjectProperty ;
    rdfs:label "has implementation" ;
    rdfs:domain secrets:KeyRotationProcess ;
    rdfs:range secrets:Implementation .

secrets:hasErrorHandling rdf:type owl:ObjectProperty ;
    rdfs:label "has error handling" ;
    rdfs:domain secrets:Implementation ;
    rdfs:range secrets:ErrorHandling .

secrets:implementedIn rdf:type owl:DatatypeProperty ;
    rdfs:label "implemented in" ;
    rdfs:domain secrets:Implementation ;
    rdfs:range xsd:string .

secrets:testFilePath rdf:type owl:DatatypeProperty ;
    rdfs:label "test file path" ;
    rdfs:domain secrets:TestCoverage ;
    rdfs:range xsd:string .

secrets:hasCategory rdf:type owl:ObjectProperty ;
    rdfs:domain secrets:ErrorHandling ;
    rdfs:range secrets:ErrorCategory .

secrets:hasRecoveryStrategy rdf:type owl:ObjectProperty ;
    rdfs:domain secrets:ErrorHandling ;
    rdfs:range secrets:RecoveryStrategy .

# Instances
secrets:OnePassword rdf:type owl:NamedIndividual, secrets:SecretStore ;
    rdfs:label "1Password" ;
    rdfs:comment "1Password secret management system" .

secrets:EnvironmentVariable rdf:type owl:NamedIndividual, secrets:SecretReference ;
    rdfs:label "Environment Variable" ;
    rdfs:comment "Environment variable reference to a secret" ;
    secrets:usesReferenceFormat "${VARIABLE_NAME}" .

secrets:SnowflakeKeyRotation rdf:type owl:NamedIndividual, secrets:KeyRotationProcess ;
    rdfs:label "Snowflake Key Rotation Process" ;
    rdfs:comment """Process for rotating Snowflake authentication keys:
1. Use ACCOUNTADMIN role for key updates
2. Generate new RSA key pair in PKCS#8 format
3. Extract and format public key
4. Update Snowflake user with ALTER USER command
5. Backup existing keys with timestamp
6. Install new key""" ;
    secrets:requiresRole "ACCOUNTADMIN" ;
    secrets:hasTestCoverage secrets:SnowflakeKeyRotationTests ;
    secrets:hasImplementation secrets:SnowflakeKeyRotationImpl .

secrets:SnowflakeKeyRotationTests rdf:type owl:NamedIndividual, secrets:TestCoverage ;
    rdfs:label "Snowflake Key Rotation Tests" ;
    rdfs:comment "Test coverage for key rotation process" ;
    test:coveragePercentage "89"^^xsd:integer ;
    test:testCount "7"^^xsd:integer ;
    secrets:testFilePath "teams_bot/tests/test_rotate_secrets.py" ;
    secrets:hasTestCase secrets:SuccessfulRotationTest,
                       secrets:WrongRoleTest,
                       secrets:InvalidKeyFormatTest,
                       secrets:KeyGenerationFailureTest,
                       secrets:BackupTest,
                       secrets:CommandExecutionTest,
                       secrets:StoredProcedureTest .

secrets:SuccessfulRotationTest rdf:type owl:NamedIndividual, secrets:TestCase ;
    rdfs:label "Successful Key Rotation Test" ;
    rdfs:comment "Tests successful key rotation with ACCOUNTADMIN role" ;
    test:function "test_successful_key_rotation" ;
    test:verifies "Role usage, key update, backup process" .

secrets:WrongRoleTest rdf:type owl:NamedIndividual, secrets:TestCase ;
    rdfs:label "Wrong Role Test" ;
    rdfs:comment "Tests failure when using incorrect role" ;
    test:function "test_key_rotation_with_wrong_role" ;
    test:verifies "Permission error handling" .

secrets:SnowflakeKeyRotationImpl rdf:type owl:NamedIndividual, secrets:Implementation ;
    rdfs:label "Snowflake Key Rotation Implementation" ;
    rdfs:comment "Implementation of key rotation process" ;
    secrets:implementedIn "teams_bot/scripts/rotate_secrets.py" ;
    secrets:hasErrorHandling secrets:SnowflakeErrorHandling .

secrets:SnowflakeErrorHandling rdf:type owl:NamedIndividual, secrets:ErrorHandling ;
    rdfs:label "Snowflake Error Handling" ;
    rdfs:comment """Error handling strategies:
1. Permission errors with detailed messages
2. Key format validation
3. Command execution error capture
4. Backup failure handling
5. Logging of all errors""" .

secrets:EnvironmentError rdf:type owl:NamedIndividual, secrets:ErrorCategory ;
    rdfs:label "Environment Error" .

secrets:OperationError rdf:type owl:NamedIndividual, secrets:ErrorCategory ;
    rdfs:label "Operation Error" .

secrets:RecoveryError rdf:type owl:NamedIndividual, secrets:ErrorCategory ;
    rdfs:label "Recovery Error" .

secrets:AutomaticRecovery rdf:type owl:NamedIndividual, secrets:RecoveryStrategy ;
    rdfs:label "Automatic Recovery" .

secrets:ManualRecovery rdf:type owl:NamedIndividual, secrets:RecoveryStrategy ;
    rdfs:label "Manual Recovery" .

# SHACL Validation
secrets:KeyRotationShape rdf:type sh:NodeShape ;
    sh:targetClass secrets:KeyRotationProcess ;
    sh:property [
        sh:path secrets:requiresRole ;
        sh:minCount 1 ;
        sh:message "Must specify required role"
    ] ;
    sh:property [
        sh:path secrets:hasTestCoverage ;
        sh:minCount 1 ;
        sh:message "Must have test coverage"
    ] ;
    sh:property [
        sh:path secrets:hasImplementation ;
        sh:minCount 1 ;
        sh:message "Must have implementation details"
    ] .

secrets:TestCoverageShape rdf:type sh:NodeShape ;
    sh:targetClass secrets:TestCoverage ;
    sh:property [
        sh:path test:coveragePercentage ;
        sh:minCount 1 ;
        sh:datatype xsd:integer ;
        sh:minInclusive 80 ;
        sh:message "Test coverage must be at least 80%"
    ] ;
    sh:property [
        sh:path test:testCount ;
        sh:minCount 1 ;
        sh:datatype xsd:integer ;
        sh:minInclusive 1 ;
        sh:message "Must have at least one test"
    ] ;
    sh:property [
        sh:path secrets:hasTestCase ;
        sh:minCount 1 ;
        sh:message "Must have at least one test case"
    ] .

# Additional SHACL Validation Rules
secrets:ImplementationShape rdf:type sh:NodeShape ;
    sh:targetClass secrets:Implementation ;
    sh:property [
        sh:path secrets:implementedIn ;
        sh:minCount 1 ;
        sh:pattern "^(teams_bot|scripts)/.+\\.(py|sql)$" ;
        sh:message "Implementation path must be in teams_bot or scripts directory and be a Python or SQL file"
    ] ;
    sh:property [
        sh:path secrets:hasErrorHandling ;
        sh:minCount 1 ;
        sh:message "Must have error handling defined"
    ] .

secrets:ErrorHandlingShape rdf:type sh:NodeShape ;
    sh:targetClass secrets:ErrorHandling ;
    sh:property [
        sh:path secrets:hasCategory ;
        sh:minCount 1 ;
        sh:message "Must specify at least one error category"
    ] ;
    sh:property [
        sh:path secrets:hasRecoveryStrategy ;
        sh:minCount 1 ;
        sh:message "Must specify at least one recovery strategy"
    ] .

secrets:SecretReferenceShape rdf:type sh:NodeShape ;
    sh:targetClass secrets:SecretReference ;
    sh:property [
        sh:path secrets:usesReferenceFormat ;
        sh:minCount 1 ;
        sh:pattern "^\\$\\{[A-Z_][A-Z0-9_]*\\}$" ;
        sh:message "Secret reference must use environment variable format ${VARIABLE_NAME}"
    ] .
