name: Validate Environment

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'tools/**'
      - 'environment.yml'
      - 'pyproject.toml'
      - '.env.template'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'tools/**'
      - 'environment.yml'
      - 'pyproject.toml'
      - '.env.template'
  workflow_dispatch:  # Allow manual trigger

defaults:
  run:
    shell: bash -l {0}  # Use login shell to ensure conda environment is activated

jobs:
  validate:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict
        activate-environment: chatbot-llm
        environment-file: environment.yml
        auto-activate-base: false

    - name: Verify Conda Environment
      run: |
        conda info
        conda list
        python --version
        which python

    - name: Run validator tests
      run: |
        python -m pytest tools/tests/test_validate_local_env.py -v

    - name: Run environment validation
      run: |
        python tools/validate_local_env.py || true  # Don't fail on tool missing

    - name: Check required files
      run: |
        python -c "
        from pathlib import Path
        required = ['environment.yml', 'pyproject.toml', '.env.template', '.gitignore']
        missing = [f for f in required if not Path(f).exists()]
        if missing:
            print(f'Missing required files: {missing}')
            exit(1)
        "

    - name: Validate environment.yml
      run: |
        # First try to update existing environment
        conda env update --file environment.yml --prune || \
        # If update fails, try to remove and create new
        (conda env remove -n chatbot-llm && \
         conda env create --dry-run -f environment.yml)

    - name: Validate .env.template
      run: |
        python -c "
        import os
        from pathlib import Path
        template = Path('.env.template').read_text()
        required_vars = ['TEAMS_BOT_ID', 'TEAMS_BOT_PASSWORD', 'DEBUG']
        missing = [var for var in required_vars if var not in template]
        if missing:
            print(f'Missing required variables in .env.template: {missing}')
            exit(1)
        "
